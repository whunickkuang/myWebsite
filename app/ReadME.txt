1.导入模型文件后计算出当前模型第一个浇筑节段的施工指令，并将第一个浇筑节段状态设为正在浇筑，其它节段状态设为未浇筑。
2.每浇筑完成一个节段，将此节段状态设为已浇筑，将它下一节段状态改为正在浇筑，在最后一个节段浇筑完，则所有节段状态均为已浇筑。
3.在点击过程时，会获取当前模型正在浇筑的节段，若没有正在浇筑的节段，则返回modal，显示已完成浇筑。若有正在浇筑的节段，则跳到该节段浇筑过程。
4.浇筑某个节段时，界面上所有的浇筑值即为该节段的施工指令值，界面上所有的测量值即为该节段的回测数据值。


5.什么时候确定项目结束?（由项目管理员手工设置项目结束）

6.每新建一个项目就从公司剩余总的片数中减去分配的片数。每导入一个模型时，就从项目剩余片数中减去片数。当项目结束后，如果还有剩余片数，则回收到公司总的剩余片数中
  另外需要实现为一个项目增加片数。（项目片数变动，模型片数变动）

7.项目片数减少

  model change:
  user中：增加pieces_left
  project中:增加pieces_left 显示剩余片数
  survey_data中：增加time，上传回测数据的时间
  construction_order中：增加time，生成施工指令时间

导入模型文件前判定片数够不够

筛选的返回值

有时候改了一些数据库值，未通过db.session.commit()来添加到数据中。


TODO:
  1.节段表第一个表
  2.回测数据并进过程中
  3.片数管理优化（）在model list，project list界面上显示剩余片数
  4.施工指令样式(输出文件的样式)
  5.交互输入